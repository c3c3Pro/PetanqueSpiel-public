(()=>{async function e(){try{const e=await fetch("/api/plaetze");if(!e.ok)throw new Error("Plaetze konnten nicht geladen werden");return await e.json()}catch(e){return console.error("Fehler beim Aufruf des Ortes",e.message),[]}}function t(e,n){const o=document.getElementById("gameList");if(o.innerHTML="",!e||0===e.length)return void(o.innerHTML="<p>Keine Spiele gefunden.</p>");if(0===e.filter((e=>e.placeId===n)).length)return void(o.innerHTML="<p>Keine Spiele fuer diesen Ort gefunden.</p>");const a=document.createElement("table");a.classList.add("game-table");const i=document.createElement("tr");i.innerHTML="\n    <th>Datum</th>\n    <th>Spieler</th>\n    <th>Punkte</th>\n    <th>Aktionen</th>\n  ",a.appendChild(i),e.forEach((e=>{const o=document.createElement("tr"),i=e.matchDate?new Date(e.matchDate).toLocaleDateString():"Kein Datum",c=e.players?e.players.join(", "):"Unbekannt",s=e.ScoreHistory?e.ScoreHistory.join(" - "):"Keine Punkte";o.innerHTML=`\n      <td>${i}</td>\n      <td>${c}</td>\n      <td>${s}</td>\n    `;const l=document.createElement("button");l.textContent="Löschen",l.addEventListener("click",(async()=>{await async function(e){if(!confirm("Möchten Sie dieses Spiel wirklich löschen?"))return;try{if(!(await fetch(`/api/games/${e}`,{method:"DELETE"})).ok)throw new Error("Fehler beim Löschen der Partie");console.log("Spiel gelöscht."),t(await r())}catch(e){console.error(e)}}(e.id),t(await r(),n)}));const d=document.createElement("td");d.appendChild(l),o.appendChild(d),a.appendChild(o)})),o.appendChild(a)}function n(t){const r=document.getElementById("locationList");r.innerHTML="",t.forEach((t=>{const o=document.createElement("div");o.classList.add("place-item"),o.innerHTML=`\n    <b>${t.platzName}</b><br>\n    Zugang: ${t.zugang}<br>\n    Outdoor/Indoor: ${t.publicAccess}<br>\n    Spielfelder: ${t.anzahlFelder}<br>\n    Koordinaten: ${t.coords.join(", ")}<br>\n    Notizen: ${t.notizen||"Keine Notizen"}\n    `;const a=document.createElement("button");a.textContent="Loeschen",a.addEventListener("click",(async()=>{await async function(t){if(confirm("Moechten Sie diesen Ort wirklich loeschen?"))try{if(!(await fetch(`/api/places/${t}`,{method:"DELETE"})).ok)throw new Error("Fehler beim Loeschen des Ortes");console.log(`Ort geloescht: ${t}`),n(await e())}catch(e){console.error(e)}}(t.id),n(await e())})),o.appendChild(a),r.appendChild(o)}))}async function r(){try{const e=await fetch("/api/games");if(!e.ok)throw new Error("Fehler beim Laden der Partien");return await e.json()}catch(e){return console.error(e),[]}}var o;o.on("click",(async function(t){const{lat:r,lng:o}=t.latlng;if((await e()).some((e=>e.coords[0]===r&&e.coords[1]===o)))return void alert("Ein Platz existiert bereits an dieser Position! bitte neue Position auswaehlen");if(!await i(r,o))return void alert("Dieser Ort liegt ausserhalb Deutschlands. Bitte waehlen Sie eine deutsche Position aus!");const a=prompt("den Name eintragen: ");if(!a.trim())return void alert("Der Name darf nicht leer sein!");let s,l;do{if(s=prompt("Zugang eingeben(oeffentlich oder Privat): "),null===s)return;s=s.trim().toLowerCase()}while(!["oeffentlich","privat"].includes(s));do{if(l=prompt("Outdoor oder Indoor?: "),null===l)return;l=l.trim().toLowerCase()}while(!["outdoor","indoor"].includes(l));const d=prompt("Die Anzahl der Spielfelder eintragen: ");if(!d||isNaN(d)||d<=0)return void alert("Bitte eine gültige Nummer eingeben: ");const u=prompt("Notizen (optional): "),h={platzName:a,zugang:s,publicAccess:l,anzahlFelder:parseInt(d,10),coords:[r,o],notizen:u||""};c(h);try{if(!(await fetch("/api/plaetze",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(h)})).ok)throw new Error("Plaetze konnten nicht gespeichert werden");console.log("Platz erfolgreich gespeichert"),n(await e())}catch(e){console.log("Fehler beim Speichern des Platzes",e.message)}})),async function(){try{const e=await fetch("/api/plaetze");if(!e.ok)throw new Error("Plaetze konnten nicht geladen werden");(await e.json()).forEach((e=>c(e)))}catch(e){console.error("Fehler beim Aufruf des Ortes",e.message)}}(),document.getElementById("locationForm").addEventListener("submit",(async t=>{t.preventDefault();const r=document.getElementById("name").value;navigator.geolocation?navigator.geolocation.getCurrentPosition((async t=>{const o=t.coords.latitude,a=t.coords.longitude,i={name:r,latitude:o,longitude:a};await async function(t){try{if(!(await fetch("api/places",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)})).ok)throw new Error("Fehler beim Speichern des Ortes");console.log("Ort hinzugefuegt"),n(await e())}catch(e){console.error(e)}}(i)}),(e=>{console.error("Fehler beim Aufruf der Position",e),alert("Konnte den Standort nicht abrufen")})):alert("Geolocation wird nicht unterstuetzt")})),document.addEventListener("DOMContentLoaded",(async()=>{t(await r()),n(await e())})),document.getElementById("matchForm").addEventListener("submit",(async e=>{e.preventDefault();const n={matchDate:new Date(document.getElementById("matchDate").value).toISOString(),players:document.getElementById("players").value.split(",").map((e=>e.trim())),score:document.getElementById("score").value.split(",").map((e=>parseInt(e.trim(),10)))};await async function(e){if(e.score.some((e=>e>13)))alert("Ein Spieler kann nicht mehr als 13 Punkte haben!");else try{if(!(await fetch("/api/games",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)})).ok)throw new Error("Fehler beim Speichern der Partie");console.log("Partie hinzugefuegt"),t(await r(),e.placeId)}catch(e){console.error(e)}}(n)})),document.addEventListener("DOMContentLoaded",(async()=>{t(await r())})),document.addEventListener("DOMContentLoaded",(()=>{document.getElementById("map-container")?(o=L.map("map-container").setView([51.1657,10.4515],6),L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",{attribution:"© OpenStreetMap contributors"}).addTo(o)):console.error("Map container element is missing")}));var a=new Map;async function i(e,t){const n=`https://nominatim.openstreetmap.org/reverse?format=json&lat=${e}&lon=${t}`;try{const e=await fetch(n);if(!e.ok)throw new Error(`Server status ${e.status}`);const t=await e.json();if(!t.address||!t.address.country)throw new Error("ungueltige Antwort von API");return t.address&&"Germany"===t.address.country}catch(e){return console.warn("Der Bereich ist ausserhalb von Deutschland: ",e),null}}async function c(e){if(!e||!e.coords||2!==e.coords.length)return console.error("Ungueltige Platzdaten: ",e),void alert("Fehler: ungueltige Platzdaten.");const n=e.coords.join(",");if(a.has(n))return;if(!await i(e.coords[0],e.coords[1]))return void alert("Dieser Ort liegt ausserhalb von Deutschland");const c=L.marker(e.coords).addTo(o).bindPopup(`\n      <b>${e.platzName}</b><br>\n      Zugang: ${e.zugang}<br>\n      Typ: ${e.publicAccess}<br>\n      Feld: ${e.anzahlFelder}<br>\n      Notizen: ${e.notizen||"Keine"}<br>\n      <button class="edit-btn" data-id="${e.id}">Bearbeiten</button>   \n      <button class="delete-btn" data-id="${e.id}" data-key="${n}">Loeschen</button>\n    `).on("click",(async function(){try{const n=await r();t(n.filter((t=>t.platz===e.id)))}catch(e){console.error("Fehler beim Aufruf der Spiele",e)}}));a.set(n,c)}document.addEventListener("DOMContentLoaded",(()=>{!async function(){try{n(await e()),t(await r())}catch(e){console.error("Fehler beim Laden der Daten: ",e)}}()}))})();