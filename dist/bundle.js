(()=>{var e=L.map("map-container").setView([51.1657,10.4515],6);L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",{attribution:"© OpenStreetMap contributors"}).addTo(e);var t=new Map;async function n(e,t){const n=`https://nominatim.openstreetmap.org/reverse?format=json&lat=${e}&lon=${t}`;try{const e=await fetch(n);if(!e.ok)throw new Error(`Server status ${e.status}`);const t=await e.json();return t.address&&"Germany"===t.address.country}catch(e){return console.warn("Der Bereich ist ausserhalb von Deutschland: ",e),!1}}async function r(r){if(!r||!r.coords||2!==r.coords.length)return console.error("Ungueltige Platzdaten: ",r),void alert("Fehler: ungueltige Platzdaten.");const a=r.coords.join(",");if(t.has(a))return;if(!await n(r.coords[0],r.coords[1]))return void alert("Dieser Ort liegt ausserhalb von Deutschland");const i=L.marker(r.coords).addTo(e).bindPopup(`\n      <b>${r.platzName}</b><br>\n      Zugang: ${r.zugang}<br>\n      Typ: ${r.publicAccess}<br>\n      Feld: ${r.anzahlFelder}<br>\n      Notizen: ${r.notizen||"Keine"}\n    `).openPopup();t.set(a,i)}async function a(){try{const e=await fetch("/api/games");if(!e.ok)throw new Error("Fehler beim Laden der Partien");return await e.json()}catch(e){return console.error(e),alert("❌ Die Partien konnten nicht geladen werden."),[]}}async function i(e){try{const t=await fetch("/api/games/",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)});if(!t.ok)throw new Error("Fehler beim Speichern der Partie");!function(e){document.getElementById("matchTableBody").appendChild(o(e))}(await t.json()),alert("✅ Spiel erfolgreich hinzugefuegt!")}catch(e){console.error(e)}}function o(e){const t=document.createElement("tr");return t.setAttribute("data-id",e._id),t.innerHTML=`\n  <td>${new Date(e.matchDate).toLocaleDateString("de-DE")}</td>\n  <td>${e.matchTime||"No time"}</td>\n  <td>${e.players.join(", ")}</td>\n  <td>${e.score.join(":")}</td>\n  <td>\n    <button class="edit-btn" data-id="${e._id}">Edit</button>\n    <button class="btn delete-btn" data-id="${e._id}">Delete</button>\n  </td>\n`,t}async function s(e){try{const t=await fetch(`/api/games/${e}`);if(!t.ok)throw new Error("Spiel nicht gefunden");const n=await t.json(),r=new Date(n.matchDate).toISOString().split("T")[0],a=prompt("Neues Spieldatum:",r);if(null===a)return;const i=new Date(a).toISOString(),s=prompt("Neue Spielzeit:",n.matchTime||"");if(null===s)return;const c=prompt("Neue Spieler:",n.players.join(", "));if(null===c)return;const l=c.split(",").map((e=>e.trim()));if(2!==l.length||l.some((e=>""===e)))return void alert("❌ Bitte geben Sie genau zwei Spielernamen ein, getrennt durch ein Komma.");const d=prompt("Neues Ergebnis:",n.score.join(":"));if(null===d||!/^\d{1,2}:\d{1,2}$/.test(d))return void alert('❌ Das Score-Feld muss im Format "Zahl:Zahl" sein.');if(d.split(":").map((e=>parseInt(e.trim(),10))).some((e=>Number.isNaN(e))))return void alert("❌ Ungültiges Score-Format");if(i===n.matchDate&&s===n.matchTime&&c===n.players.join(",")&&d===n.score.join(":"))return void console.log("Keine Änderungen vorgenommen.");const u=await fetch(`/api/games/${e}`,{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify({matchDate:i,matchTime:s,players:c.split(",").map((e=>e.trim())),score:d.split(":").map((e=>parseInt(e.trim(),10)))})});if(u.ok){const t=await u.json(),n=document.querySelector(`tr[data-id="${e}"]`);n&&n.replaceWith(o(t))}else console.error("Aktualisierung fehlgeschlagen")}catch(e){console.error("Fehler beim Bearbeiten des Spiels:",e)}}async function c(){const e=document.getElementById("matchTableBody");try{const t=await a();if(e.innerHTML="",0===t.length)return void(e.innerHTML='<tr><td colspan="4">Keine Spiele gefunden.</td></tr>');t.forEach((t=>{t._id&&e.appendChild(o(t))}))}catch(e){console.error("Fehler beim Laden der Match History:",e)}}document.getElementById("matchForm").addEventListener("submit",(async e=>{e.preventDefault();const t=document.getElementById("matchDate").value,n=document.getElementById("matchTime").value,r=document.getElementById("players").value,a=document.getElementById("score").value,o=r.split(",").map((e=>e.trim())).filter((e=>e));if(2!==o.length||o.some((e=>""===e)))return void alert("❌ Bitte geben Sie genau zwei Spielernamen ein, getrennt durch ein Komma.");const s=a.split(":").map((e=>Number(e.trim())));if(s.some((e=>Number.isNaN(e)||e<0||e>13)))return void alert('❌ Das Score-Feld muss im Format "Zahl:Zahl" sein (zwischen 0 und 13).');const c={matchDate:t,matchTime:n,players:o,score:s};await i(c)})),document.getElementById("matchTableBody").addEventListener("click",(async e=>{const t=e.target,n=t.dataset.id;n&&(t.classList.contains("edit-btn")?await s(n):t.classList.contains("delete-btn")&&await g(n))})),document.addEventListener("DOMContentLoaded",c);var l=[],d=[];async function u(){try{const e=await fetch("/api/plaetze");if(!e.ok)throw new Error("Fehler beim Laden der Orte");return await e.json()}catch(e){return console.error(e),alert("Fehler beim Laden des Ortes. Bitte versuchen Sie  es später erneut."),[]}}async function m(){try{const e=await fetch("/api/games");if(!e.ok)throw new Error("Fehler beim Laden der Spiele");return await e.json()}catch(e){return console.error(e),alert("Fehler beim Laden des Spiels. Bitte versuchen Sie  es später erneut."),[]}}function h(){const e=document.getElementById("locationList");e.innerHTML="",l.forEach((t=>{const n=document.createElement("li");n.innerHTML=`\n    <span>${t.name} (${Number(t.lat).toFixed(4)}, ${Number(t.lng).toFixed(4)})</span>\n    <button class="edit-btn" data-id="${t._id}">Bearbeiten </button>\n    <button class="delete-btn" data-id="${t._id}">Löschen</button>`,e.appendChild(n)}))}async function p(){const e=document.getElementById("onGoingGameList"),t=document.querySelector("#completed-games ul");if(!e||!t)return void console.error("Fehler: Listenelemente nicht gefunden!");e.innerHTML="",t.innerHTML="";const n=await m();if(0===n.length)return e.innerHTML="<li>Keine Spiele gefunden</li>",void(t.innerHTML="<li>Keine abgschlossene Spiele</li>");n.forEach((n=>{const r=document.createElement("li"),a=new Date(n.matchDate).toLocaleDateString("de-DE");r.innerHTML=`\n    <span>${a} - ${n.players} (${n.score})</span>\n    <button class="edit-btn" data-id="${n._id}">Bearbeiten </button>\n    <button class="delete-btn" data-id="${n._id}">loeschen </button>`,n.completed?t.appendChild(r):e.appendChild(r)}))}async function g(e){if(confirm("Möchten Sie dieses Spiel wirklich löschen?"))try{if(!(await fetch(`/api/games/${e}`,{method:"DELETE"})).ok)throw new Error("Fehler beim Löschen des Spiels");await p()}catch(e){console.error("Fehler beim Löschen des Spiels:",e),alert("❌ Das Spiel konnte nicht gelöscht werden.")}}async function f(){try{const e=await fetch("/api/plaetze");if(!e.ok)throw new Error("Plaetze konnten nicht geladen werden");return await e.json()}catch(e){return console.error("Fehler beim Aufruf des Ortes",e.message),[]}}async function w(t){const n=prompt("Neuer Name: ",t.platzName)||t.platzName;let r,a;do{if(r=prompt("Zugang (oeffentlich oder privat): ",t.zugang)?.trim().toLowerCase(),null===r)return}while(!["oeffentlich","privat"].includes(r));do{if(a=prompt("Zugang (oeffentlich oder privat): ",t.zugang)?.trim().toLowerCase(),null===a)return}while(!["outdoor","indoor"].includes(a));const i=prompt("Anzahl der Spielfelder: ",t.anzahlFelder)||t.anzahlFelder,o=prompt("Notizen (optional):",t.notizen)||"";alert("Klicken Sie auf die Karte, um einen neuen Standort zu waehlen."),e.once("click",(async e=>{const s=[e.latlng.lat,e.latlng.lng],c={platzName:n,zugang:r,publicAccess:a,anzahlFelder:parseInt(i,10),coords:s,notizen:o};try{if(!(await fetch(`/api/plaetze/${t._id}`,{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify(c)})).ok)throw new Error("Platz konnte nict aktualisiert werden");alert(" Platz erfolgreich aktualisiert!"),h(await f())}catch(e){console.error("Fehler beim Aktualisieren des Platzes:",e.message)}}))}document.addEventListener("DOMContentLoaded",(async function(){l=await u(),d=await m(),l.length>0&&h(),d.length>0&&p(),c();const e=document.getElementById("locationList");e&&e.addEventListener("click",(function(e){const t=e.target.dataset.id;e.target.classList.contains("edit-btn")&&w(t),e.target.classList.contains("delete-btn")&&async function(e){if(!confirm("Möchten Sie diesen Ort wirklich löschen?"))return;try{await fetch(`/api/plaetze/${e}`,{method:"DELETE"}),l=await u(),h()}catch(e){console.error("Fehler beim Loeschen des Ortes.")}}(t)}));const t=document.getElementById("matchTableBody");t&&t.addEventListener("click",(async e=>{const t=e.target.dataset.id;t&&(e.target.classList.contains("edit-btn")?s(t):e.target.classList.contains("delete-btn")&&await g(t))}))})),e.on("click",(async function(e){const{lat:t,lng:a}=e.latlng;if((await f()).some((e=>e.coords[0]===t&&e.coords[1]===a)))return void alert("Ein Platz existiert bereits an dieser Position! bitte neue Position auswaehlen");if(!await n(t,a))return void alert("Dieser Ort liegt ausserhalb Deutschlands. Bitte waehlen Sie eine deutsche Position aus!");const i=prompt("den Name eintragen: ");if(!i||!i.trim())return void alert("Der Name darf nicht leer sein!");let o,s;do{if(o=prompt("Zugang eingeben(oeffentlich oder Privat): ")?.trim().toLowerCase(),null===o)return}while(!["oeffentlich","privat"].includes(o));do{if(s=prompt("Outdoor oder Indoor?: ")?.trim().toLowerCase(),null===s)return}while(!["outdoor","indoor"].includes(s));const c=prompt("Die Anzahl der Spielfelder eintragen: ");if(!c||isNaN(c)||c<=0)return void alert("Bitte eine gültige Nummer eingeben: ");const l=prompt("Notizen (optional): ")||"",d={platzName:i,zugang:o,publicAccess:s,anzahlFelder:parseInt(c,10),coords:[t,a],notizen:l};r(d);try{if(!(await fetch("/api/plaetze",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(d)})).ok)throw new Error("Plaetze konnten nicht gespeichert werden");console.log("Platz erfolgreich gespeichert"),h(await f())}catch(e){console.log("Fehler beim Speichern des Platzes",e.message)}})),async function(){try{const e=await fetch("/api/plaetze");if(!e.ok)throw new Error("Plaetze konnten nicht geladen werden");(await e.json()).forEach((e=>{r(e).on("click",(()=>w(e)))}))}catch(e){console.error("Fehler beim Aufruf des Ortes",e.message)}}(),document.addEventListener("DOMContentLoaded",(()=>{!async function(){try{await f(),h(),await a(),p()}catch(e){console.error("Fehler beim Laden der Daten: ",e)}}()}))})();